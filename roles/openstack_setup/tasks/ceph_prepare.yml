---

# - name: Stop and disable glusterfs
#   service:
#     name: glusterfs-server
#     state: stopped
#     enabled: false
#   when: storage_backend == "ceph"

# - apt_key:
#     url: "https://download.ceph.com/keys/release.asc"
#     state: present

# - apt_repository:
#     repo: "deb https://download.eu.ceph.com/debian/ {{ ansible_distribution_release }} main"
#     state: present

# - name: Install packages
#   package:
#     name: "{{ item }}"
#     state: latest
#   with_items:
#     - ceph-deploy
#     - ntp
#     - python-rbd
#     - ceph-common

# - user:
#     name: "{{ ceph_deploy_user }}"
#     comment: "Ceph Deploy User"
#     password: "$6$HgEr5rgyXKOkcAp2$sExSd96/lGX.zvGQ1HbUxYjXzZNr9A5E3BKah24ZeeJL7eqqLCS9.Nplff4f4PD0YqbPLRd/QGnKIY7ZfNl6e."

# - lineinfile:
#     path: "/etc/sudoers.d/{{ ceph_deploy_user }}"
#     create: yes
#     mode: 0440
#     regexp: "^{{ ceph_deploy_user }}"
#     line: "{{ ceph_deploy_user }} ALL = (root) NOPASSWD:ALL"

# - name: Set authorized key took from file
#   authorized_key:
#     user: "{{ ceph_deploy_user }}"
#     state: present
#     key: "{{ lookup('file', '/Users/rob/.ssh/id_rsa.pub') }}"

- name: Install Ceph Client packages
  shell: "ceph-deploy install --cli {{ groups['openstack'] | map('extract', hostvars, 'ansible_hostname') | map('map_format', '%s.internal' ) | list | join(' ') }}"
  become: false
  when: "'controller' in group_names"

- name: List Ceph pools
  command: "ceph osd pool ls"
  register: ceph_pools
  when: "'controller' in group_names"

- name: Create Ceph pool
  command: "ceph osd pool create {{ item.name }} {{ item.pg_size }}"
  when: "'controller' in group_names and ceph_pools.stdout.find(item) != -1"
  with_items:
    - { name: 'images', pg_size: '16' }
    - { name: 'volumes', pg_size: '32' }
    - { name: 'compute', pg_size: '32' }
    - { name: 'backups', pg_size: '32' }

- name: Setup Ceph Glance authentication
  command: "ceph auth get-or-create client.glance mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=images'"
  register: glance_auth
  when: "'controller' in group_names"

- name: Setup Ceph cinder-backup authentication
  command: "ceph auth get-or-create client.cinder-backup mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=backups'"
  register: cinder_backup_auth
  when: "'controller' in group_names"

- name: Setup Ceph cinder authentication
  command: "ceph auth get-or-create client.cinder mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=volumes, allow rwx pool=vms, allow rwx pool=images'"
  register: cinder_auth
  when: "'controller' in group_names"

- name: Copy glance keyring file
  copy:
    dest: /etc/ceph/ceph.client.glance.keyring
    content: "{{ glance_auth.stdout }}"
    owner: glance
    group: glance
    mode: 0644
  when: "'controller' in group_names"
    
- name: Copy cinder keyring file
  copy:
    dest: /etc/ceph/ceph.client.cinder.keyring
    content: "{{ cinder_auth.stdout }}"
    owner: cinder
    group: cinder
    mode: 0644
  when: "'controller' in group_names"

- name: Copy cinder-backup keyring file
  copy:
    dest: /etc/ceph/ceph.client.cinder-backup.keyring
    content: "{{ cinder_backup_auth.stdout }}"
    owner: cinder
    group: cinder
    mode: 0644
  when: "'controller' in group_names"

- name: Get cinder key for libvirt
  shell: 'ceph auth get-key client.cinder > /etc/ceph/client.cinder.key'
  args:
    creates: /etc/ceph/client.cinder.key

- name: Setup libvirt secrets.xml
  template:
    src: secret.xml
    dest: /etc/ceph/secret.xml
